Probabilistic D-Clustering
===============================================================================

n 點分 k 群

希望產生不錯的群中心

計算: d -> P -> :math:`\mu = \frac{P^2}{d}`
      距離 機率

e.g. Data = {1, 2, 4, 10, 12, 13} , k = 2

initial 猜 centroids C_1 = 5, C_2 = 6

|             |   x = 1   |   x = 2   |   x = 4   |   x = 10   |   x = 12   |   x = 13   |
| \|x - C_1\| | abs(1-5)  |  abs(2-5) |     1     |    5       |      7     |     8      |
| \|x - C_2\| |    5      |  4        |     2     |    4       |      6     |     7      |

| P_1         |  5/(4+5)  |  4/(3+4)  |  2/(1+2)  |   4/(5+4)  | ...
|             |  = 0.556  |  = 0.571  |  = 0.667  |  = 0.444   |

| P_2         |  4/(4+5)  |  3/(3+4)  |  1/(1+2)  |
|             |  = 0.444  |  = 0.429  |  = 0.333  |

| \mu_1       | 0.556^2/4 |
| = P_1^2 / d | = 0.079
|             |

| \mu_2       |
| = P_2^2 / d |


Update

.. math::

    C_1 = \frac{ \sum_{i=1}^6 \mu_1(x_i) \times x_i }{ \sum \mu_i }
    = 4.380

    C_2 = ... = 7.272

    Iteration 2:
    C_1 = 3.864
    C_2 = 10.022

    Iteration 3:
    C_1 = 3.84
    C_2 = 10.025

    Iteration 4:
    C_1 = 3.811
    C_2 = 10.028


PS. in Iteration 4 , x_4 接近 C_2
\therefore \mu_1(x_4) ~= 0.00
           \mu_2(x_4) = 40.355

PS. if \mu = 0^2 / 非0
    則硬性規定 \mu = 1
若 \vec{x} 與某群之 centroid C_A 重疊到則 d(x, C_A) = 0

則 \Mu_A = \frac{P^2}{d} = \frac{1}{0} = \infinit
而改定義 \Mu_A = 1 以跑 Algorithm


傳統 k-means: \mu_i 時 0 or 1
Fuzzy k-means: 0~1
PDC: \mu >= 0
(P 視為比重) (?)

           正確率/ 秒數
                k-means       Fuzzy       PDC
Iris Data       88% / 3    |  89% / 2.5  | 93% / 3.8
Rsupini Data    96% / 2.3  |  100%/ 2.5  |  97 / 4.2
Wine            96% / 3.23 |   96% / 3.74 |  90%/ 6.47


雜訊之影響
----------------------------------------------------------------------


則跑 100 實驗的平均，
檢查算得之 C_1, C-2
與實際 C_A, C_B 之 centroid 差距

|  kmeans   |  F.K.M   |   PDC  |
+-----------+----------+--------+
|  11.6     |  5.2     |   2.6  |


Initial 之影響
----------------------------------------------------------------------

可以自行修正


三群之公式
----------------------------------------------------------------------

Step 1 仍算 d_j = \| \vec{x} - \vec{C_j} \|,
    \forall j = 1...k,
    \forall x

Step 2
    .. math::

        P_1(x) = \frac{ \| x-C_2 \| \times \| x-C_3 \| }{
            \| x-C_1 \| \| x-C_2 \| +
            \| x-C_2 \| \| x-C_3 \| +
            \| x-C_1 \| \| x-C_3 \|
        }
        P_2(x) = \frac{ \| x-C_1 \| \times \| x-C_3 \| }{
            \| x-C_1 \| \| x-C_2 \| +
            \| x-C_2 \| \| x-C_3 \| +
            \| x-C_1 \| \| x-C_3 \|
        }
        p_3(x) = \frac{ \| x-C_1 \| \times \| x-C_2 \|}{
            \| x-C_1 \| \| x-C_2 \| +
            \| x-C_2 \| \| x-C_3 \| +
            \| x-C_1 \| \| x-C_3 \|
        }

Step 3
    \Mu_j(x) = \frac{P^2_j}{d_j}

Step 4
    C_j = \frac{\sum_x [\Mu_j(x)] \times x}{\sum_x \Mu_j(x)},
    \forall j = 1...K


PS. 此公式可推廣到 K (K>=4) 以上
