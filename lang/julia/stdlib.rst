Standard Lib
===============================================================================

Collections
----------------------------------------------------------------------

Array
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

* ``fill("", 10)``: like ``[""] * 10`` in python.

* ``mapslices(f, A, dims)``:
  把 Array 做 slice 後丟進去 ``f`` 。
  ``dims`` 用來選第幾個維度要用 ``:`` 做 slice 。

  假設 ``f`` 是 :math:`2 \times 3 \times 4 \times 5` ，
  ``dim = [3, 4]`` 會看到 ``[i, j, :, :]``

* ``foreach``: 但 ``map`` 的 outcome 不需要時建議用這個。


Iterations
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

An iterable object interface:

- ``start()``

- ``done()``

- ``next()``

See also: http://docs.julialang.org/en/latest/manual/interfaces.html#man-interface-iteration-1


Date
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

::

    julia> collect(Date("2017-1-1"):Date("2017-2-1"))
    32-element Array{Date,1}:
     2017-01-01
     2017-01-02
     2017-01-03
     2017-01-04
     2017-01-05
     2017-01-06
     2017-01-07
     2017-01-08
     2017-01-09
     2017-01-10
     2017-01-11
     2017-01-12
     2017-01-13
     2017-01-14
     2017-01-15
     2017-01-16
     2017-01-17
     2017-01-18
     2017-01-19
     2017-01-20
     2017-01-21
     2017-01-22
     2017-01-23
     2017-01-24
     2017-01-25
     2017-01-26
     2017-01-27
     2017-01-28
     2017-01-29
     2017-01-30
     2017-01-31
     2017-02-01


* ``TimeDate`` with ``StepRange``::

    DateTime(2017, 1, 1, 8, 0, 0):Dates.Hour(2):DateTime(2017, 1, 1, 20, 0, 0)


Filesystem
----------------------------------------------------------------------

like python's ``__file__``::

    dirname(@__FILE__)

* 0.6+ has ``@__DIR__``


Network
----------------------------------------------------------------------

* ``download``


OS Utils
----------------------------------------------------------------------

* ``withenv``: temporary change env var(s)::

    withenv("PWD" => nothing) do  # ``nothing`` can delete the var
        println(ENV["PWD"])
    end
